- name: Update repositories cache and install alacritty dependency packages
  become: yes
  apt:
    update_cache: yes
    pkg:
      - cmake
      - pkg-config
      - libfreetype6-dev
      - libfontconfig1-dev
      - libxcb-xfixes0-dev
      - libxkbcommon-dev
      - python3
  when: install_alacritty is defined

- name: Install rust
  shell:
    cmd: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustup"
  when: install_alacritty is defined

- name: Get Alacritty v0.13.1
  shell:
    cmd: "git clone https://github.com/alacritty/alacritty.git .alacritty && cd .alacritty && git checkout v0.13.1"
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.alacritty"
  when: install_alacritty is defined

- name: Compile Alacritty
  shell:
    cmd: "{{ ansible_env.HOME }}/.cargo/bin/cargo build --release"
    chdir: "{{ ansible_env.HOME }}/.alacritty"
    creates: "{{ ansible_env.HOME }}/.alacritty/target/release/alacritty"
  when: install_alacritty is defined

- name: Install Alacritty locally
  become: yes
  shell:
    cmd: "sudo cp target/release/alacritty /usr/local/bin/alacritty.0.13.1 && \
      sudo ln -f -s /usr/local/bin/alacritty.0.13.1 /usr/local/bin/alacritty && \
      sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg && \
      sudo desktop-file-install extra/linux/Alacritty.desktop && \
      sudo update-desktop-database"
    chdir: "{{ ansible_env.HOME }}/.alacritty"
    creates: "/usr/local/bin/alacritty.0.13.1"
  when: install_alacritty is defined

- name: Link alacritty.toml
  shell:
    cmd: "ln -f -s {{ playbook_dir }}/config_files/alacritty.toml {{ ansible_env.HOME }}/.alacritty.toml"
    creates: "{{ ansible_env.HOME }}/.alacritty.toml"
  when: install_alacritty is defined

- name: Install tlp
  become: yes
  apt:
    update_cache: yes
    pkg:
      - tlp
      - tlp-rdw
  when: install_powermgmt_tools is defined

- name: Enable tlp service
  become: yes
  service:
    name: tlp
    enabled: yes
    state: started
  when: install_powermgmt_tools is defined

- name: Create .drivers directory
  shell:
    cmd: "mkdir -p {{ ansible_env.HOME }}/.drivers"
    creates: "{{ ansible_env.HOME }}/.drivers"
  when: install_powermgmt_tools is defined

- name: Clone autocpufreq version v2.2.0
  shell:
    cmd: "git clone https://github.com/AdnanHodzic/auto-cpufreq.git && cd auto-cpufreq && git checkout v2.2.0"
    chdir: "{{ ansible_env.HOME }}/.drivers"
    creates: "{{ ansible_env.HOME }}/.drivers/auto-cpufreq"
  when: install_powermgmt_tools is defined

- name: Install autocpufreq
  become: yes
  shell:
    cmd: "sudo ./auto-cpufreq-installer --install"
    chdir: "{{ ansible_env.HOME }}/.drivers/auto-cpufreq"
    creates: "/usr/local/bin/auto-cpufreq"
  when: install_powermgmt_tools is defined

- name: Clone macbook audiodriver snd-hda-codec-cs8409
  shell:
    cmd: "git clone https://github.com/egorenar/snd-hda-codec-cs8409.git"
    chdir: "{{ ansible_env.HOME }}/.drivers"
    creates: "{{ ansible_env.HOME }}/.drivers/snd-hda-codec-cs8409"
  when: install_macbookdrivers is defined

- name: Install snd-hda-codec-cs8409
  become: yes
  shell:
    cmd: "make && sudo make install"
    chdir: "{{ ansible_env.HOME }}/.drivers/snd-hda-codec-cs8409"
    creates: "/lib/modules/5.15.0-94-generic/updates/snd-hda-codec-cs8409.ko"
  when: install_macbookdrivers is defined
