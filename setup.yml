- name: "Local setup"
  hosts: localhost
  connection: local 
  tasks:
  - name: Update repositories cache and install packages
    become: yes
    ansible.builtin.apt:
      update_cache: yes
      pkg:
        - ripgrep
        - wl-clipboard
        - curl
        - tmux
        - fonts-powerline
        - zsh
        - wget
        - unzip
        - default-jre
        - fd-find
        - fzf

  - name: Install git-delta
    shell:
      cmd: ./get_delta.sh
      creates: "{{ ansible_env.HOME }}/.local/bin/delta"

  - name: Install zoxide
    shell:
      cmd: curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
      creates: "{{ ansible_env.HOME }}/.local/bin/zoxide"

  - name: Install howdoi
    shell:
      cmd: pip3 install howdoi
      creates: "{{ ansible_env.HOME }}/.local/bin/howdoi"

  - name: Copy ssh keys
    copy:
      src: ./.ssh
      dest: "{{ ansible_env.HOME }}"
    register: ssh_key_copy

  - name: Set ssh key permissions
    shell:
      cmd: chmod 0400 ~/.ssh/id_ed25519
    when: ssh_key_copy.changed

  - name: Link files
    shell:
      cmd: ./link_files.sh

  - name: Install omz
    shell:
      cmd: sh -c "$(wget --no-check-certificate https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
      creates: "{{ ansible_env.HOME }}/.oh-my-zsh"

  - name: Install zsh-autosuggestions
    shell:
      cmd: git clone https://github.com/zsh-users/zsh-autosuggestions {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      creates: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

  - name: Install zsh-syntax-highlighting
    shell:
      cmd: git clone https://github.com/zsh-users/zsh-syntax-highlighting.git {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      creates: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

  - name: Update .bashrc to start zsh
    shell:
      cmd: "mv {{ ansible_env.HOME }}/.bashrc {{ ansible_env.HOME }}/.bashrc_bak && ln -f -s {{ ansible_env.HOME }}/dotfiles/.bashrc {{ ansible_env.HOME}}/.bashrc"
      creates: "{{ ansible_env.HOME }}/.bashrc_bak"

  - name: Install docker
    become: yes
    shell:
      cmd: curl -kfsSL https://get.docker.com -o get-docker.sh && \ 
        sh get-docker.sh && \
        groupadd -f docker && \
        usermod -aG docker $USER
      creates: /usr/bin/docker
    when: install_docker is defined

  - name: Install nvm
    shell:
      cmd: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

  - name: Install nodejs && npm
    shell:
      cmd: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install v18.16.0"
      executable: /usr/bin/zsh
      creates: "{{ ansible_env.HOME }}/.nvm/versions/node/v18.16.0"

  - name: Install neovim
    shell:
      cmd: "curl -LO https://github.com/neovim/neovim/releases/download/v0.8.3/nvim-linux64.deb && \
        sudo apt install ./nvim-linux64.deb && \
        rm -f nvim-linux64.deb && \
        git clone git@github.com:andreas-ries/nvim.git {{ ansible_env.HOME }}/.config/nvim && \
        nvim --headless \"+Lazy! sync\" +qa"
      creates: "{{ ansible_env.HOME }}/.config/nvim"

  - name: Install tmux tpm
    shell:
      cmd: "git clone https://github.com/tmux-plugins/tpm {{ ansible_env.HOME }}/.tmux/plugins/tpm"
      creates: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"

  - name: Install custom font
    shell:
      cmd: "mkdir {{ ansible_env.HOME }}/.fonts && \
        curl -LO https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/DejaVuSansMono.zip && \
        unzip DejaVuSansMono.zip -d {{ ansible_env.HOME }}/.fonts && \
        rm DejaVuSansMono.zip && \
        fc-cache -f -v"
      creates: "{{ ansible_env.HOME }}/.fonts"

