- name: Include version variables
  include_vars: versions.yml

- name: Prepare directory .local/other
  shell:
    cmd: "mkdir -p {{ ansible_env.HOME }}/.local/other"
    creates: "{{ ansible_env.HOME }}/.local/other"

- name: Prepare directory .local/bin
  shell:
    cmd: "mkdir -p {{ ansible_env.HOME }}/.local/bin"
    creates: "{{ ansible_env.HOME }}/.local/bin"

- name: "Install sesh {{ sesh_version }}"
  shell:
    cmd: "go install github.com/joshmedeski/sesh@{{ sesh_version }} && \
      touch {{ ansible_env.HOME }}/go/bin/sesh.{{ sesh_version }}"
    creates: "{{ ansible_env.HOME }}/go/bin/sesh.{{ sesh_version }}"

- name: Clone fzf
  shell:
    cmd: "git clone https://github.com/junegunn/fzf.git {{ ansible_env.HOME }}/.local/other/fzf"
    creates: "{{ ansible_env.HOME }}/.local/other/fzf"

- name: "Install fzf version {{ fzf_version }}"
  shell:
    cmd: "git fetch --all && git checkout {{ fzf_version }} && ./install && touch bin/{{ fzf_version }}"
    chdir: "{{ ansible_env.HOME }}/.local/other/fzf"
    creates: "{{ ansible_env.HOME }}/.local/other/fzf/bin/{{ fzf_version }}"

- name: Install git-delta
  shell:
    cmd: installer/get-delta.sh
    creates: "{{ ansible_env.HOME }}/.local/bin/delta"

- name: Install zoxide
  shell:
    cmd: curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
    creates: "{{ ansible_env.HOME }}/.local/bin/zoxide"

# - name: Install python packages from requirements.txt
#   shell:
#     cmd: "pip3 install --user -r requirements.txt"

- name: Copy ssh keys
  copy:
    src: ./.ssh
    dest: "{{ ansible_env.HOME }}"
    mode: "0400"

- name: Link zshrc
  shell:
    cmd: "ln -f -s {{ playbook_dir }}/config_files/zshrc {{ ansible_env.HOME }}/.zshrc"
    creates: "{{ ansible_env.HOME }}/.zshrc"

- name: Link gitconfig
  shell:
    cmd: "ln -f -s {{ playbook_dir }}/config_files/gitconfig {{ ansible_env.HOME }}/.gitconfig"
    creates: "{{ ansible_env.HOME }}/.gitconfig"

- name: Link tmux.conf
  shell:
    cmd: "ln -f -s {{ playbook_dir }}/config_files/tmux.conf {{ ansible_env.HOME }}/.tmux.conf"
    creates: "{{ ansible_env.HOME }}/.tmux.conf"

- name: Link powerlevel10k theme
  shell:
    cmd: "ln -f -s {{ playbook_dir }}/config_files/p10k.zsh {{ ansible_env.HOME }}/.p10k.zsh"
    creates: "{{ ansible_env.HOME }}/.p10k.zsh"

- name: Install omz
  shell:
    cmd: sh -c "$(wget --no-check-certificate https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
    creates: "{{ ansible_env.HOME }}/.oh-my-zsh"

- name: Install zsh-autosuggestions
  shell:
    cmd: git clone https://github.com/zsh-users/zsh-autosuggestions {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    creates: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

- name: Install zsh-syntax-highlighting
  shell:
    cmd: git clone https://github.com/zsh-users/zsh-syntax-highlighting.git {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    creates: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

- name: Install powerlevel10k
  shell:
    cmd: git clone --depth=1 https://github.com/romkatv/powerlevel10k.git {{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k
    creates: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"

- name: Install nvm
  shell:
    cmd: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

- name: Install nodejs && npm
  shell:
    cmd: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install v18.16.0"
    executable: /usr/bin/zsh
    creates: "{{ ansible_env.HOME }}/.nvm/versions/node/v18.16.0"

- name: Clone tmux
  shell:
    cmd: "git clone https://github.com/tmux/tmux.git {{ ansible_env.HOME }}/.local/other/tmux"
    creates: "{{ ansible_env.HOME }}/.local/other/tmux"

- name: "Install tmux version {{ tmux_version }}"
  shell:
    cmd: "git fetch --all && git checkout {{ tmux_version }} && \
      sh autogen.sh && \
      ./configure && \
      make && \
      sudo cp tmux /usr/local/bin/tmux && \
      touch tmux.{{ tmux_version }}"
    chdir: "{{ ansible_env.HOME }}/.local/other/tmux"
    creates: "{{ ansible_env.HOME }}/.local/other/tmux/tmux.{{ tmux_version }}"

- name: Install tmux tpm
  shell:
    cmd: "git clone https://github.com/tmux-plugins/tpm {{ ansible_env.HOME }}/.tmux/plugins/tpm"
    creates: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"

- name: Install lazygit
  shell:
    cmd: installer/get-lazygit.sh
    creates: /usr/local/bin/lazygit

