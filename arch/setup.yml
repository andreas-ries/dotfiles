- name: Update repositories cache and install packages
  become: yes
  pacman:
    update_cache: yes
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - ripgrep
      - wl-clipboard
      - powerline-fonts
      - wget
      - unzip
      - jdk17-openjdk
      - fd
      - libevent
      - ncurses
      - base-devel
      - bison
      - pkgconf
      - python-virtualenv
      - cmake
      - freetype2
      - fontconfig
      - pkg-config
      - make
      - libxcb
      - libxkbcommon
      - zsh
      - docker
      - go

- name: Install neovim version {{ neovim_version }}
  shell:
    cmd: "mkdir -p {{ ansible_env.HOME }}/.neovim/{{ neovim_version }} && \
      curl -LO https://github.com/neovim/neovim/releases/download/{{ neovim_version }}/nvim-linux-x86_64.tar.gz && \
      tar xzvf nvim-linux-x86_64.tar.gz -C {{ ansible_env.HOME }}/.neovim/{{ neovim_version }} --strip-components=1 && \
      rm -f nvim-linux-x86_64.tar.gz"
    creates: "{{ ansible_env.HOME }}/.neovim/{{ neovim_version }}/bin/nvim"

- name: Install neovim config
  shell:
    cmd: "git clone git@github.com:andreas-ries/nvim.git {{ ansible_env.HOME }}/.config/nvim && \
      {{ ansible_env.HOME }}/.neovim/{{ neovim_version }}/bin/nvim --headless \"+Lazy! sync\" +qa"
    creates: "{{ ansible_env.HOME }}/.config/nvim"

- name: Install custom font
  shell:
    cmd: "mkdir {{ ansible_env.HOME }}/.fonts && \
      curl -LO https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/DejaVuSansMono.zip && \
      unzip DejaVuSansMono.zip -d {{ ansible_env.HOME }}/.fonts && \
      rm DejaVuSansMono.zip && \
      fc-cache -f -v"
    creates: "{{ ansible_env.HOME }}/.fonts"

- name: Install rust
  shell:
    cmd: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustup"

- name: Clone Alacritty repository
  shell:
    cmd: "git clone https://github.com/alacritty/alacritty.git {{ ansible_env.HOME }}/.local/other/alacritty"
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.local/other/alacritty"

- name: Checkout Alacritty {{ alacritty_version }}
  shell:
    cmd: "git fetch --all && git clean -fdx . && git checkout {{ alacritty_version }} && touch {{ alacritty_version }}"
    chdir: "{{ ansible_env.HOME }}/.local/other/alacritty"
    creates: "{{ alacritty_version }}"

- name: Compile Alacritty
  shell:
    cmd: "{{ ansible_env.HOME }}/.cargo/bin/cargo build --release"
    chdir: "{{ ansible_env.HOME }}/.local/other/alacritty"
    creates: "{{ ansible_env.HOME }}/.local/other/alacritty/target/release/alacritty"

- name: Install Alacritty locally
  become: yes
  shell:
    cmd: "sudo cp target/release/alacritty /usr/local/bin/alacritty.{{ alacritty_version }} && \
      sudo ln -f -s /usr/local/bin/alacritty.{{ alacritty_version }} /usr/local/bin/alacritty && \
      sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg && \
      sudo desktop-file-install extra/linux/Alacritty.desktop && \
      sudo update-desktop-database"
    chdir: "{{ ansible_env.HOME }}/.local/other/alacritty"
    creates: "/usr/local/bin/alacritty.{{ alacritty_version }}"

- name: Link alacritty.toml
  shell:
    cmd: "ln -f -s {{ playbook_dir }}/config_files/alacritty.toml {{ ansible_env.HOME }}/.alacritty.toml"
    creates: "{{ ansible_env.HOME }}/.alacritty.toml"
