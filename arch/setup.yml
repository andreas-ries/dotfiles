- name: Update repositories cache and install packages
  become: yes
  pacman:
    update_cache: yes
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - ripgrep
      - wl-clipboard
      - powerline-fonts
      - wget
      - unzip
      - jre17-openjdk
      - fd
      - libevent
      - ncurses
      - base-devel
      - bison
      - pkgconf
      - python-virtualenv
      - cmake
      - freetype2
      - fontconfig
      - pkg-config
      - make
      - libxcb
      - libxkbcommon
      - zsh
      - docker

- name: Install neovim
  shell:
    cmd: "mkdir -p {{ ansible_env.HOME }}/.neovim/v0.9.2 && \
      curl -LO https://github.com/neovim/neovim/releases/download/v0.9.2/nvim-linux64.tar.gz && \
      tar xzvf nvim-linux64.tar.gz -C {{ ansible_env.HOME }}/.neovim/v0.9.2 --strip-components=1 && \
      rm -f nvim-linux64.tar.gz"
    creates: "{{ ansible_env.HOME }}/.neovim/v0.9.2/bin/nvim"

- name: Install neovim config
  shell:
    cmd: "git clone git@github.com:andreas-ries/nvim.git {{ ansible_env.HOME }}/.config/nvim && \
      {{ ansible_env.HOME }}/.neovim/v0.9.2/bin/nvim --headless \"+Lazy! sync\" +qa"
    creates: "{{ ansible_env.HOME }}/.config/nvim"

- name: Install custom font
  shell:
    cmd: "mkdir {{ ansible_env.HOME }}/.fonts && \
      curl -LO https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/DejaVuSansMono.zip && \
      unzip DejaVuSansMono.zip -d {{ ansible_env.HOME }}/.fonts && \
      rm DejaVuSansMono.zip && \
      fc-cache -f -v"
    creates: "{{ ansible_env.HOME }}/.fonts"

- name: Update .bashrc to start zsh
  shell:
    cmd: "mv {{ ansible_env.HOME }}/.bashrc {{ ansible_env.HOME }}/.bashrc_bak && ln -f -s {{ ansible_env.HOME }}/dotfiles/.bashrc {{ ansible_env.HOME}}/.bashrc"
    creates: "{{ ansible_env.HOME }}/.bashrc_bak"

- name: Install rust
  shell:
    cmd: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustup"

- name: Prepare folder for other installs
  shell:
    cmd: "mkdir -p {{ ansible_env.HOME }}/other"
    creates: "{{ ansible_env.HOME }}/other"

- name: Get Alacritty
  shell:
    cmd: "git clone https://github.com/alacritty/alacritty.git && cd alacritty && git checkout v0.13.1"
    chdir: "{{ ansible_env.HOME }}/other"
    creates: "{{ ansible_env.HOME }}/other/alacritty"

- name: Compile Alacritty
  shell:
    cmd: "cargo build --release"
    chdir: "{{ ansible_env.HOME }}/other/alacritty"
    creates: "{{ ansible_env.HOME }}/other/alacritty/target/release/alacritty"

- name: Install Alacritty locally
  become: yes
  shell:
    cmd: "sudo cp target/release/alacritty /usr/local/bin/alacritty.0.13.1 && \
      sudo ln -f -s /usr/local/bin/alacritty.0.13.1 /usr/local/bin/alacritty && \
      sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg && \
      sudo desktop-file-install extra/linux/Alacritty.desktop && \
      sudo update-desktop-database"
    chdir: "{{ ansible_env.HOME }}/other/alacritty"
    creates: "/usr/local/bin/alacritty.0.13.1"

- name: Link alacritty.toml
  shell:
    cmd: "ln -f -s {{ ansible_env.HOME }}/dotfiles/config_files/alacritty.toml {{ ansible_env.HOME }}/.alacritty.toml"
    creates: "{{ ansible_env.HOME }}/.alacritty.toml"

- name: Clone autocpufreq version v2.1.0
  shell:
    cmd: "git clone https://github.com/AdnanHodzic/auto-cpufreq.git && cd auto-cpufreq && git checkout v2.1.0"
    chdir: "{{ ansible_env.HOME }}/other"
    creates: "{{ ansible_env.HOME }}/other/auto-cpufreq"

- name: Install autocpufreq
  become: yes
  shell:
    cmd: "sudo ./auto-cpufreq-installer --install"
    chdir: "{{ ansible_env.HOME }}/other/auto-cpufreq"
    creates: "/usr/local/bin/auto-cpufreq"
